@include("backend");
@library("std", "7.0.1685-testing");
@library("explorer", "7.0.4-testing");

//Your apps entry point
fn main() {
    // If graph entry point is empty the local data import
    if (contracts_by_name .size() == 0) {
        // Will be displayed on the cl to inform the user we are loading data
        println("Importing Data ...");
        importLocalData();
        println("Done");
    }

    //Check if the api key is present, if so start the scheduler
    var key = File::open("api_key.txt");
    if (key != null) {
        // startImportingScheduler();
    }
}

@expose
fn startImportingScheduler() {
    var periodicStationTask = PeriodicTask {
        arguments: null,
        every: 5_min,
        user_id: 1,
        function: importer::importStations,
        start: time::now()
    };

    var periodicContractTask = PeriodicTask {
        arguments: null,
        every: 1_day,
        user_id: 1,
        function: importer::importContracts,
        start: time::now()
    };

    //Greycats own integrated job scheduler refer to the documentation for more information unde Features -> Periodic
    PeriodicTask::set(Array<PeriodicTask> {periodicContractTask, periodicStationTask});
}



//Boostrap the data, for demo purposes
fn importLocalData() {
    importData();
    importRecords();
}

fn exportLocalData() {
    exportData();
    exportRecords();
}